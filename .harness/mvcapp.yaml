pipeline:
    stages:
        - stage:
              type: CI
              spec:
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          namespace: ci
                          connectorRef: minikube
                  execution:
                      steps:
                          - step:
                                type: Run
                                spec:
                                    privileged: false
                                    image: alpine/git:latest
                                    connectorRef: luke_docker_hub
                                    command: |-
                                        set -e
                                        set -x
                                        echo "<+codebase>"
                                        echo "<+pipeline.properties.ci>"
                                        # if the netrc enviornment variables exist, write
                                        # the netrc file.

                                        if [[ ! -z "${DRONE_NETRC_MACHINE}" ]]; then
                                            cat <<EOF > ${HOME}/.netrc
                                        machine ${DRONE_NETRC_MACHINE}
                                        login ${DRONE_NETRC_USERNAME}
                                        password ${DRONE_NETRC_PASSWORD}
                                        EOF
                                        fi

                                        # if the ssh_key environment variable exists, write
                                        # the ssh key and add the netrc machine to the
                                        # known hosts file.

                                        if [[ ! -z "${DRONE_SSH_KEY}" ]]; then
                                            mkdir ${HOME}/.ssh
                                            echo -n "$DRONE_SSH_KEY" > ${HOME}/.ssh/id_rsa
                                            chmod 600 ${HOME}/.ssh/id_rsa

                                            touch ${HOME}/.ssh/known_hosts
                                            chmod 600 ${HOME}/.ssh/known_hosts
                                            ssh-keyscan -H ${DRONE_NETRC_MACHINE} > /etc/ssh/ssh_known_hosts 2> /dev/null
                                        fi

                                        # configure git global behavior and parameters via the
                                        # following environment variables:


                                        if [[ -z "${DRONE_COMMIT_AUTHOR_NAME}" ]]; then
                                            export DRONE_COMMIT_AUTHOR_NAME=harness
                                        fi

                                        if [[ -z "${DRONE_COMMIT_AUTHOR_EMAIL}" ]]; then
                                            export DRONE_COMMIT_AUTHOR_EMAIL=no-reply@harness.io
                                        fi

                                        export GIT_AUTHOR_NAME=${DRONE_COMMIT_AUTHOR_NAME}
                                        export GIT_AUTHOR_EMAIL=${DRONE_COMMIT_AUTHOR_EMAIL}
                                        export GIT_COMMITTER_NAME=${DRONE_COMMIT_AUTHOR_NAME}
                                        export GIT_COMMITTER_EMAIL=${DRONE_COMMIT_AUTHOR_EMAIL}
                                        env
                                        # echo "<+pipeline.name>" > output.txt
                                        # git config --global user.email "luke.hertert@gmail.com"
                                        # git config --global user.name "Luke Hertert"
                                        # git status
                                        #git add .
                                        # git commit -m "Add new file"                                       
                                        # git push origin <+codebase.branch>
                                name: git testing
                                identifier: git_testing
                          - step:
                                when:
                                    stageStatus: Success
                                    condition: <+pipeline.name> == "success"
                                type: Plugin
                                spec:
                                    settings:
                                        repo: ldhertert/mvcapp
                                        dry_run: "true"
                                    privileged: false
                                    imagePullPolicy: IfNotPresent
                                    image: plugins/docker
                                    connectorRef: luke_docker_hub
                                name: Build docker image
                                identifier: Build_docker_image
                  cloneCodebase: true
              name: Build
              identifier: build
    properties:
        ci:
            codebase:
                repoName: mvcapp
                connectorRef: luke_github
                build: <+input>
    projectIdentifier: luke
    orgIdentifier: default
    name: mvcapp
    identifier: mvcapp
